{
  "name": "rig-class.js",
  "description": "Fast prototype based javascript classes for Node.js and the browser!",
  "version": "1.1.29",
  "author": "Christopher Maples <cmaples77@gmail.com>",
  "licence": "LGPL-3.0",
  "engines": {
    "node": ">=v0.10.0"
  },
  "devDependencies": {
    "bower": "^1.6.5",
    "connect": "^3.3.3",
    "grunt": "^0.4.5",
    "grunt-bower-requirejs": "^1.1.1",
    "grunt-contrib-clean": "^1.1.0",
    "grunt-contrib-concat": "^0.5.0",
    "grunt-contrib-connect": "^0.9.0",
    "grunt-contrib-copy": "^0.7.0",
    "grunt-contrib-jasmine": "^1.1.0",
    "grunt-contrib-jshint": "^1.1.0",
    "grunt-contrib-uglify": "^0.6.0",
    "grunt-force-task": "^2.0.0",
    "grunt-jsbeautifier": "^0.2.13",
    "grunt-mocha": "^0.4.11",
    "grunt-mocha-test": "^0.12.4",
    "grunt-template-jasmine-istanbul": "^0.3.0",
    "grunt-template-jasmine-requirejs": "^0.2.0",
    "grunt-todos": "^0.3.0",
    "mocha": "^2.0.1",
    "requirejs": "^2.1.15",
    "rig-npm-dev-tools": "^1.1.9"
  },
  "keywords": [
    "class",
    "es6",
    "node",
    "browser"
  ],
  "scripts": {
    "devlink": "npm link && npm link rig-npm-dev-tools",
    "devunlink": "npm unlink rig-npm-dev-tools && npm unlink",
    "test": "grunt test",
    "idPortProcess": "netstat -tulpn | grep 8010",
    "getversion": "node -e \"console.log(require('./package.json').version)\"",
    "preinstall": "rm -rf node_modules",
    "getname": "node -e \"console.log(require('./package.json').name)\"",
    "republish": "npm unpublish $(npm -s run getname)@$(npm -s run getversion) && npm publish --tag latest",
    "unpublishdev": "npm unpublish $(npm -s run getname)@$(npm -s run getversion) || npm dist-tag rm \"$(npm -s run getname)\" \"$(npm -s run generateAlphaTag)\"; npm run setpatchversion;",
    "getpublished": "npm show \"$(npm run -s getname)\" versions",
    "setpatchversion": "npm version patch --no-git-tag-version --force",
    "setminorversion": "npm version minor --no-git-tag-version --force",
    "setmajorversion": "npm version major --no-git-tag-version --force",
    "setprereleaseversion": "npm version prerelease  --no-git-tag-version --force",
    "setdevelopmentversion": "npm run setpatchversion -s >/dev/null; npm version \"$(npm run -s generateAlphaVersion)\" --no-git-tag-version --force; npm publish --tag $(npm -s run generateAlphaTag)",
    "generateAlphaVersion": "echo \"$(npm run -s getversion)-$(npm run -s generateAlphaTag).1\"",
    "reinstall": "rm -rf node_modules && time npm install",
    "scripts": "node -e \"console.log(require('./package.json').scripts)\"",
    "getscripts": "node -e \"console.log(require('./package.json').scripts)\"",
    "packages.disk_usage": "du -csHh node_modules/*",
    "git.reset.tags": "if [ $ALLOWED='true' ]; then git tag -l | xargs git tag -d && git fetch --tags; else echo 'Please dont delete all the tags'; fi",
    "git.revert.commit": "git reset --soft HEAD~1",
    "republishdev": "npm unpublish $(npm -s run getname)@$(npm -s run getversion) && npm publish --tag $(npm -s run generateAlphaTag)",
    "generateAlphaTag": "node -e \"console.log('alpha.' + '$(git rev-parse --abbrev-ref HEAD)'.replace(/\\\\\\|\\/|\\-/g, '.'))\"",
    "total.disk_usage": "du -csHh -I \"..\" ./.*",
    "disk_usage": "du -csHh ./*",
    "getdisttags": "npm dist-tag ls",
    "getgittags": "git tag",
    "removeMergeArtifacts": "find . -name '*.orig' -delete"
  },
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {}
}
